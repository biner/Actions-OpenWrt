#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build OpenWrt x86_64

on:
  release:
    types: [published]
  push:
    branches:
      - master
    paths:
#       - 'makeconfig.d/x86_64/.config'
      - '.github/workflows/x86_64.yml'

  schedule:
    - cron: 58 3 2 * *
#  watch:
#    types: [started]


env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_TARGET: x86_64
  DEFCONFIG_FILE: ./makeconfig.d/x86_64/.config
  DIY_SH: diy.sh
  FREE_UP_DISK: true
  UPLOAD_FIRMWARE: true
  UPLOAD_FIRMWARE_TRANSFER: true
  CACHE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
#     container:
#       image: huanghuibin/ubuntu-openwrt
#       credentials:
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_PASSWORD }}


#          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
#          sudo -E apt-get -qq autoremove --purge
#          sudo -E apt-get -qq clean

    steps:
      - name: 【Linux】 Free up disk space
        run: |
          sudo -E apt update -y
          sudo -E apt full-upgrade -y
          sudo -E apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
          libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

      # 本地代码
      - name: 【User】 Checkout
        uses: actions/checkout@master
      # 完整的openwrt源码
      - name: 【OpenWrt】 Clone source code
        run: |
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          cd openwrt
          git log  -1 --format='%H'
          git log --oneline -1 | md5sum |cut -d" " -f1
          echo "FIRMWARE_HASH=$(git log  -1 --format='%H')" >> $GITHUB_ENV

      # 下载文件
      - name: 【Cache】 openwrt dl
        id: cache-primes
        if: env.CACHE == 'true'
        uses: actions/cache@v2
        env:
          cache-name: cache-openwrt
        with:
          path: |
            ./openwrt
            !./openwrt/bin
          key:  ${{ env.cache-name }}-${{ env.CONFIG_TARGET }}-${{ env.FIRMWARE_HASH }}
          restore-keys: |
            ${{ env.cache-name }}-${{ env.CONFIG_TARGET }}-
            ${{ env.cache-name }}-


      - name: Generate Prime Numbers
        run: |
          if [ -d ./openwrt ]; then
              echo "file found..."
              cd openwrt && git pull
          else
              echo "no such file!"
              git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          fi

      - name: ext package
        run: |
          if [ ! -d ./openwrt/package/ext  ]; then
              echo "no dir found..."
              mkdir  ./openwrt/package/ext
          fi
          git clone --depth 1 https://github.com/fw876/helloworld.git -b master helloworld
          cp helloworld openwrt/package/ext/helloworld -rf
          
          

      - name: 【OpenWrt】 Update feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: 【OpenWrt】 Install feeds
        run: cd openwrt && ./scripts/feeds install -a

      # 自定义配置
      - name: 【OpenWrt】 Load custom configuration
        run: |
          cp $DEFCONFIG_FILE ./openwrt/.config
          echo "defconfig start"
          cd openwrt
          make defconfig

      # openwrt 下载package    
      - name: 【OpenWrt】 Download package
        id: package
        run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
          
      - name: 【OpenWrt】 space show
        run: |
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          cd openwrt
          du -h --max-depth=1 ./
          echo "======================="
          du -h --max-depth=1 ./build_dir
          
      # openwrt 编译固件 
      - name: 【OpenWrt】 Compile the firmware
        id: compile
        run: |
          export FORCE_UNSAFE_CONFIGURE=1
          cd openwrt
          echo "======================="
          echo -e "thread compile: $(nproc) "
          make -j$(($(nproc) + 1)) || make -j1 V=s
          echo "======================="
          echo "::set-output name=status::success"
    
      - name: 【OpenWrt】 space show
        run: |
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          cd openwrt
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          echo "======================="
          du -h --max-depth=1 ./build_dir
          echo "======================="
          if [ -d ./openwrt ]; then
              du -h --max-depth=1 ./bin
          fi

      - name: 【OpenWrt】 Upload artifact
        uses: actions/upload-artifact@master
        if: steps.compile.outputs.status == 'success' && !cancelled()
        with:
          name: OpenWrt-${{ env.CONFIG_TARGET }} 
          path: |
            ./openwrt/bin/targets/
            !./openwrt/bin/targets/**/packages
            !./openwrt/bin/targets/**/*initramfs-kernel.bin


      - uses: hujiulong/action-qiniu-upload@master
        with:
          # Your qiniu access key, required.
          access_key: ${{ secrets.QINIU_ACCESS_KEY }}

          # Your qiniu secret key, required.
          secret_key: ${{ secrets.QINIU_SECRET_KEY }}

          # Bucket name, required.
          bucket: ${{ secrets.QINIU_BUCKET }}

          # The local directory (or file) you want to upload to bucket.
          # Default: './'
          source_dir: './openwrt/bin/targets/'

          # The directory inside of the bucket you want to upload to, namely key prefix prepended to dest file key.
          # Default: '/'
          dest_dir: '/static'

          # Whether to ignore source maps.
          # Default: true
          ignore_source_map: true

