name: Build OpenWrt newifi-d2

on:
  release:
    types: [published]
  push:
    branches:
      - master
    paths:
     # - 'makeconfig.d/newifi-d2/.config'
      - '.github/workflows/newifi-d2.yml'
  schedule:
    - cron: 55 4 * * 5
#  watch:
#    types: [started]


env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_TARGET: newifi3
  DEFCONFIG_FILE: ./makeconfig.d/newifi-d2/.config
  FREE_UP_DISK: true
  UPLOAD_FIRMWARE: true
  UPLOAD_FIRMWARE_TRANSFER: false
  CACHE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    # container:
    #   image: huanghuibin/ubuntu-openwrt
    #   credentials:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_PASSWORD }}

    steps:
      # 本地代码
      - name: 【User】 Checkout
        uses: actions/checkout@master
      # 完整的openwrt源码
      - name: 【OpenWrt】 Clone source code
        run: |
          mkdir ~/data0
          cd ~/data0
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH lede
          cd lede
          git log  -1 --format='%H'
          echo "FIRMWARE_HASH=$(git log  -1 --format='%H')" >> $GITHUB_ENV

      # 下载文件
      - name: 【Cache】 openwrt dl
        id: cache-primes
        if: env.CACHE == 'true'
        uses: actions/cache@v3
        env:
          cache-name: mycache-openwrt
        with:
          path: |
            ~/data0/lede
            !~/data0/lede/bin
            !~/data0/lede/build_dir/target*_musl
          key:  ${{ env.cache-name }}-${{ env.CONFIG_TARGET }}-${{ env.FIRMWARE_HASH }}
          restore-keys: |
            ${{ env.cache-name }}-${{ env.CONFIG_TARGET }}-
            ${{ env.cache-name }}-

      - name: 【OpenWrt】 space show
        run: |
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          cd ~/data0/lede
          du -h --max-depth=1 ./ 
          echo "======================="
          if [ -d ./build_dir ]; then
              du -h --max-depth=1 ./build_dir
          fi

          echo "======================="
          if [ -d ./staging_dir ]; then
              du -h --max-depth=1 ./staging_dir
          fi

      - name: Generate Prime Numbers
        run: |
          if [ -d ~/data0/lede ]; then
              echo "file found..."
              cd ~/data0/lede && git pull
          else
              echo "no such file!"
              cd ~/data0
              git clone --depth 1 $REPO_URL -b $REPO_BRANCH lede
          fi

      - name: ext package
        run: |
          cd ~/data0/lede 
          echo 'src-git helloworld https://github.com/fw876/helloworld' >>feeds.conf.default
          echo 'src-git openclash https://github.com/vernesong/OpenClash.git' >>feeds.conf.default


      - name: 【OpenWrt】 Update feeds
        run: cd ~/data0/lede && ./scripts/feeds update -a

      - name: 【OpenWrt】 Install feeds
        run: cd ~/data0/lede && ./scripts/feeds install -a

      # 自定义配置
      - name: 【OpenWrt】 Load custom configuration
        run: |
          cp $DEFCONFIG_FILE ~/data0/lede/.config
          echo "defconfig start"
          cd ~/data0/lede
          make defconfig

      # openwrt 下载package    
      - name: 【OpenWrt】 Download package
        id: package
        run: |
          cd ~/data0/lede
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
          
      - name: 【OpenWrt】 space show
        run: |
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          cd ~/data0/lede
          du -h --max-depth=1 ./
          echo "======================="
          du -h --max-depth=1 ./build_dir
          
      # openwrt 编译固件 
      - name: 【OpenWrt】 Compile the firmware
        id: compile
        run: |
          export FORCE_UNSAFE_CONFIGURE=1
          cd ~/data0/lede
          echo "======================="
          echo -e "thread compile: $(nproc) "
          make -j$(($(nproc) + 1)) || make -j1 V=s
          echo "======================="
          echo "::set-output name=status::success"
    
      - name: 【OpenWrt】 space show
        run: |
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          cd ~/data0/lede
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          echo "======================="
          du -h --max-depth=1 ./build_dir
          echo "======================="
          if [ -d ~/data0/lede ]; then
              du -h --max-depth=1  ~/data0/lede/bin
          fi

      - name: 【OpenWrt】 Upload artifact
        uses: actions/upload-artifact@master
        if: steps.compile.outputs.status == 'success' && !cancelled()
        with:
          name: OpenWrt-${{ env.CONFIG_TARGET }} 
          path: |
            ~/data0/lede/bin/targets/
            !~/data0/lede/bin/targets/**/packages
            !~/data0/lede/bin/targets/**/*initramfs-kernel.bin
